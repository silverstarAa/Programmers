import java.util.Arrays;

class Solution {
  public int solution(int n) {      
      int ans = 0;
      int sqrt = (int) Math.sqrt(n);
      int[] arr = new int[n + 1];
      
      for (int i = 2; i <= n; i++) arr[i] = i;
      
      for (int i = 2; i <= sqrt; i++) {
          for (int j = 2; i * j <= n; j++) {
              if (arr[i*j] == 0) continue;
              if (arr[i*j] != 0) arr[i*j] = 0;
          }
      }
      
      for (int i = 2; i <= n; i++) {
          if (arr[i] != 0) ans++;
      }
      
//       if (n <= 3) {
//           return n - 1;
//       }
//      
//       int[] pri = {3};
//       int size = 1;
//       int ans = 2;
//      
//       for (int i = 4; i < n + 1; i++) {
//           if (i % 2 != 0) {
//               boolean pnm = true;
//               for (int j = 0; j < pri.length; j++) {
//                   if (i % pri[j] == 0) {
//                       pnm = false;
//                       break;
//                   }
//               }
//               if (pnm) {
//                   pri = Arrays.copyOf(pri, size + 1);
//                   pri[size++] = i;
//                   ans++;
//               }
//           }
//       }

      return ans;
  }
}
